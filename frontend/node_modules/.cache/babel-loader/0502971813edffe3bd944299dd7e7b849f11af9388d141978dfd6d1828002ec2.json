{"ast":null,"code":"var _jsxFileName = \"/Users/paras/Desktop/project2/frontend/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = () => {\n  _s();\n  const [downsampledData, setDownsampledData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch downsampled data from the API endpoint\n    axios.get('http://localhost:3001/api/downsample').then(response => {\n      const data = response.data.downsampledData;\n      setDownsampledData(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching downsampled data:', error);\n      setLoading(false);\n    });\n  }, []);\n  const timestamps = downsampledData.map(item => item.timestamp);\n  const percentages = downsampledData.map(item => item.percentage);\n  const options = {\n    chart: {\n      type: 'area'\n    },\n    xaxis: {\n      categories: timestamps\n    }\n  };\n  const series = [{\n    name: 'series-1',\n    data: percentages\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series,\n      type: \"area\",\n      width: \"500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartComponent, \"BxJgqQbTtItBdHUcK8LBsZWuAt0=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["axios","React","useEffect","useState","Chart","jsxDEV","_jsxDEV","ChartComponent","_s","downsampledData","setDownsampledData","loading","setLoading","get","then","response","data","catch","error","console","timestamps","map","item","timestamp","percentages","percentage","options","chart","type","xaxis","categories","series","name","children","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/paras/Desktop/project2/frontend/src/components/ChartComponent.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\n\nconst ChartComponent = () => {\n  const [downsampledData, setDownsampledData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch downsampled data from the API endpoint\n    axios.get('http://localhost:3001/api/downsample')\n      .then(response => {\n        const data = response.data.downsampledData;\n        setDownsampledData(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching downsampled data:', error);\n        setLoading(false);\n      });\n  }, []);\n\n  \n\n  const timestamps = downsampledData.map(item => item.timestamp);\n  const percentages = downsampledData.map(item => item.percentage);\n\n  const options = {\n    chart: {\n      type: 'area',\n    },\n    xaxis: {\n      categories: timestamps,\n    },\n  };\n\n  const series = [\n    {\n      name: 'series-1',\n      data: percentages,\n    },\n  ];\n\n  return (\n    <div>\n      <Chart\n        options={options}\n        series={series}\n        type=\"area\"\n        width=\"500\"\n      />\n    </div>\n  );\n};\n\nexport default ChartComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACAF,KAAK,CAACa,GAAG,CAAC,sCAAsC,CAAC,CAC9CC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI,CAACP,eAAe;MAC1CC,kBAAkB,CAACM,IAAI,CAAC;MACxBJ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMQ,UAAU,GAAGX,eAAe,CAACY,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;EAC9D,MAAMC,WAAW,GAAGf,eAAe,CAACY,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,UAAU,CAAC;EAEhE,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLC,UAAU,EAAEV;IACd;EACF,CAAC;EAED,MAAMW,MAAM,GAAG,CACb;IACEC,IAAI,EAAE,UAAU;IAChBhB,IAAI,EAAEQ;EACR,CAAC,CACF;EAED,oBACElB,OAAA;IAAA2B,QAAA,eACE3B,OAAA,CAACF,KAAK;MACJsB,OAAO,EAAEA,OAAQ;MACjBK,MAAM,EAAEA,MAAO;MACfH,IAAI,EAAC,MAAM;MACXM,KAAK,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAjDID,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAmDpB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}