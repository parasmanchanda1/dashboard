{"ast":null,"code":"var _jsxFileName = \"/Users/paras/Desktop/project2/frontend/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\n// import axios from 'axios';\n// import React, { useEffect, useState } from 'react';\n// import Chart from \"react-apexcharts\";\n\n// const ChartComponent = () => {\n//   const [state,setState]=useState(\n//     {\n//       options: {\n//         chart: {\n//           id: \"basic-bar\"\n//         },\n//         xaxis: {\n//           categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\n//         }\n//       },\n//       series: [\n//         {\n//           name: \"series-1\",\n//           data: [30, 40, 45, 50, 49, 60, 70, 91]\n//         }\n//       ]\n//     });\n\n//   const [downsampledData, setDownsampledData] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch downsampled data from the API endpoint\n//     axios.get('http://localhost:3001/api/downsample')\n//       .then(response => {\n//         console.log(response);\n//         setDownsampledData(response.data.downsampledData);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching downsampled data:', error);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       <Chart\n//               options={state.options}\n//               series={state.series}\n//               type=\"area\"\n//               width=\"500\"\n//             />\n//     </div>\n//   );\n// };\n\n// export default ChartComponent;\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    options: {\n      chart: {\n        id: 'area-chart'\n      },\n      xaxis: {\n        categories: [] // Set the timestamp categories dynamically\n      }\n    },\n    series: [{\n      name: 'Percentage',\n      data: [] // Set the percentage data dynamically\n    }]\n  });\n  const [downsampledData, setDownsampledData] = useState([]);\n  useEffect(() => {\n    // Fetch downsampled data from the API endpoint\n    axios.get('http://localhost:3001/api/downsample').then(response => {\n      const timestampCategories = response.data.downsampledData.map(item => item.timestamp);\n      const percentageData = response.data.downsampledData.map(item => item.percentage);\n      setChartData({\n        options: {\n          ...chartData.options,\n          xaxis: {\n            categories: timestampCategories\n          }\n        },\n        series: [{\n          name: 'Percentage',\n          data: percentageData\n        }]\n      });\n      setDownsampledData(response.data.downsampledData);\n    }).catch(error => {\n      console.error('Error fetching downsampled data:', error);\n    });\n  }, [chartData.options]); // Make sure to add chartData.options as a dependency for useEffect\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: chartData.options,\n      series: chartData.series,\n      type: \"area\",\n      width: \"500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartComponent, \"j6Lvj3aDvLNu3IlGAo+vK21B9DA=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["axios","React","useEffect","useState","Chart","jsxDEV","_jsxDEV","ChartComponent","_s","chartData","setChartData","options","chart","id","xaxis","categories","series","name","data","downsampledData","setDownsampledData","get","then","response","timestampCategories","map","item","timestamp","percentageData","percentage","catch","error","console","children","type","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/paras/Desktop/project2/frontend/src/components/ChartComponent.js"],"sourcesContent":["// import axios from 'axios';\n// import React, { useEffect, useState } from 'react';\n// import Chart from \"react-apexcharts\";\n\n// const ChartComponent = () => {\n//   const [state,setState]=useState(\n//     {\n//       options: {\n//         chart: {\n//           id: \"basic-bar\"\n//         },\n//         xaxis: {\n//           categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\n//         }\n//       },\n//       series: [\n//         {\n//           name: \"series-1\",\n//           data: [30, 40, 45, 50, 49, 60, 70, 91]\n//         }\n//       ]\n//     });\n\n//   const [downsampledData, setDownsampledData] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch downsampled data from the API endpoint\n//     axios.get('http://localhost:3001/api/downsample')\n//       .then(response => {\n//         console.log(response);\n//         setDownsampledData(response.data.downsampledData);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching downsampled data:', error);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       <Chart\n//               options={state.options}\n//               series={state.series}\n//               type=\"area\"\n//               width=\"500\"\n//             />\n//     </div>\n//   );\n// };\n\n// export default ChartComponent;\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\n\nconst ChartComponent = () => {\n  const [chartData, setChartData] = useState({\n    options: {\n      chart: {\n        id: 'area-chart',\n      },\n      xaxis: {\n        categories: [], // Set the timestamp categories dynamically\n      },\n    },\n    series: [\n      {\n        name: 'Percentage',\n        data: [], // Set the percentage data dynamically\n      },\n    ],\n  });\n\n  const [downsampledData, setDownsampledData] = useState([]);\n\n  useEffect(() => {\n    // Fetch downsampled data from the API endpoint\n    axios\n      .get('http://localhost:3001/api/downsample')\n      .then(response => {\n        const timestampCategories = response.data.downsampledData.map(item => item.timestamp);\n        const percentageData = response.data.downsampledData.map(item => item.percentage);\n\n        setChartData({\n          options: {\n            ...chartData.options,\n            xaxis: {\n              categories: timestampCategories,\n            },\n          },\n          series: [\n            {\n              name: 'Percentage',\n              data: percentageData,\n            },\n          ],\n        });\n\n        setDownsampledData(response.data.downsampledData);\n      })\n      .catch(error => {\n        console.error('Error fetching downsampled data:', error);\n      });\n  }, [chartData.options]); // Make sure to add chartData.options as a dependency for useEffect\n\n  return (\n    <div>\n      <Chart options={chartData.options} series={chartData.series} type=\"area\" width=\"500\" />\n    </div>\n  );\n};\n\nexport default ChartComponent;\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC;IACzCQ,OAAO,EAAE;MACPC,KAAK,EAAE;QACLC,EAAE,EAAE;MACN,CAAC;MACDC,KAAK,EAAE;QACLC,UAAU,EAAE,EAAE,CAAE;MAClB;IACF,CAAC;IACDC,MAAM,EAAE,CACN;MACEC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,EAAE,CAAE;IACZ,CAAC;EAEL,CAAC,CAAC;EAEF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACd;IACAF,KAAK,CACFqB,GAAG,CAAC,sCAAsC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,mBAAmB,GAAGD,QAAQ,CAACL,IAAI,CAACC,eAAe,CAACM,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;MACrF,MAAMC,cAAc,GAAGL,QAAQ,CAACL,IAAI,CAACC,eAAe,CAACM,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,UAAU,CAAC;MAEjFnB,YAAY,CAAC;QACXC,OAAO,EAAE;UACP,GAAGF,SAAS,CAACE,OAAO;UACpBG,KAAK,EAAE;YACLC,UAAU,EAAES;UACd;QACF,CAAC;QACDR,MAAM,EAAE,CACN;UACEC,IAAI,EAAE,YAAY;UAClBC,IAAI,EAAEU;QACR,CAAC;MAEL,CAAC,CAAC;MAEFR,kBAAkB,CAACG,QAAQ,CAACL,IAAI,CAACC,eAAe,CAAC;IACnD,CAAC,CAAC,CACDW,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC,EAAE,CAACtB,SAAS,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEzB,oBACEL,OAAA;IAAA2B,QAAA,eACE3B,OAAA,CAACF,KAAK;MAACO,OAAO,EAAEF,SAAS,CAACE,OAAQ;MAACK,MAAM,EAAEP,SAAS,CAACO,MAAO;MAACkB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAvDID,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAyDpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}